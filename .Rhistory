doc <- xmltreeParse(fileUrl,useInternal=TRUE)
install.packages("json64")
install.packages("jsonlite")
library(json64)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
jsonData$owner$login
myjson <- toJSON(iris, pretty = TRUE)
cat(myjson)
myjson
iris2 <- fromJSON(myjson)
head(iris2)
iris2
tail(iris2)
install.packages("data.table")
library(data.table)
DF = data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
DF = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT,3)
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT,3)
tables()
DT[2,]
DT[DT$Y=="a",]
DT[c(2,3)]
DT[,list(mean(x),sum(z))]
DT[,table(y)]
DT[,w:=z^2]
DT
DT[,m:= {tmp <- (x+z); log2(tmp+5)}]
DT
DT[,a;=x>0]
DT[,a:=x>0]
DT
DT[,b:=mean(x+y),by=a]
DT[,b:= mean(x+y),by=a]
DT[,b:= mean(x+w),by=a]
DT
DT <- data.table(x=sample(letters[1:3], 1E5, TRUE))
DT[, .N, by=x]
dt <- data.table(x=rep(c("a", "b", "c"),each=100), y=rnorm(300))
setkey(dt, x)
dt["a"]
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile = "./data/cameras.xlsx",method = "curl")
dateDownloaded <- date()
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
cameraData <- read.xlsx(".data/cameras.xlsx", sheetIndox=1,header=TRUE)
head(cameraData)
install.packages("xlsx")
library(xlsx)
library("xlsx")
library(XML)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal = TRUE)
doc <-  xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal = TRUE)
rootnode <- xmlRoot(doc)
sum(xpathSApply(rootnode,"//zipcode",xmlValue == 21231))
sum(xpathSApply(rootnode,"//zipcode",xmlValue) == 21231)
library(data.table)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","./Q5.csv','curl")
print(date())
DT = fread("./Q5.csv")
DT = fread('./Q5.csv')
DT=fread('./Q5.csv')
DT == fread('./Q5.csv'
DT == fread('./Q5.csv'
DT == fread('./Q5.csv')
DT <- fread(input = "quiz1data4", sep = ",")
("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile="quiz1data4.csv")
pwsed
library(readxl)
getdata_data_DATA_gov_NGAP <- read_excel("C:/Users/LENOVO/Desktop/new project/getdata_data_DATA.gov_NGAP.xlsx")
View(getdata_data_DATA_gov_NGAP)
head(getdata_data_DATA_gov_NGAP)
library(dplyr)
head(getdata_data_DATA_gov_NGAP)
select(getdata_data_DATA_gov_NGAP, contract, Number)
head(getMethodsMetaData)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, value)
res <- gather(students2, sex_class, count, -grade)
res
separate()
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?separate
?spread
submit()
library(readr)
parse_number("class5")
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script4.R')
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed<- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
packageVersion("dplyr")
bind_rows(passed, failed)
sat
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script8.R')
submit()
submit()
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script9.R')
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script9.R')
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script9.R')
source('C:/Users/Public/Documents/Wondershare/CreatorTemp/Rtmpiu7qDS/script9.R')
submit()
library(jpeg)
install.packages("jpeg")
install.packages("jpeg")
library(jpeg)
library(data.table)
library(dplyr)
library(Hmisc)
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
pwset
pwset()
pwd()
dst1 +"Users/LENEVO/Desktop/coursera/R_jhu/geting_and_cleaning_data/week3/q1.csv"
dst1 +"Users/LENEVO/Desktop/q1.csv"
dst1 = "/Users/LENEVO/Desktop/coursera1"
download.file(fileUrl1, dst1, method = 'curl')
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, dst1, method = 'curl')
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file ="USers/LENOVO/Desktop/coursera1"
download.file(fileUrl, file, method = "curl")
file ="USers/LENOVO/Desktop/coursera1/q"
download.file(fileUrl, file, method = "curl")
file ="USers/LENOVO/Desktop/coursera1/q.csv"
download.file(fileUrl, file, method = "curl")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "htttps://data.baltimorecity.gov/api/views/dz54-2aru/rows.vsv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv")
download.file(fileUrl,destfile = "./data/cameras.csv")
download.file(fileUrl,destfile = "./data/cameras.csv", method="curl")
download.file(fileUrl,destfile="./data/cameras.csv", method="curl")
fileUrl <- "htttps://data.baltimorecity.gov/api/views/dz54-2aru/rows.vsv?accessType=DOWNLOAD"
download.file(fileUrl,destfile = "./data/cameras.csv", method = "curl")
install.packages("csv")
fileUrl <- "htttps://data.baltimorecity.gov/api/views/dz54-2aru/rows.vsv?accessType=DOWNLOAD"
download.file(fileUrl,destfile = "./data/cameras.csv", method = "curl")
library(csv)
ls
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(mylist)
testName <- "this_is_a_test"
sub("_","",testName)
gsub("_","",testName)
d1 = date()
d1
class(d1)
d2 = Sys.Date()
d2
class(d2)
format(d2, "%a %b %d")
x = c("1jan1960", "2jan1960", "31mar1960", "30jul1960"); z = as.Date(x, "%d%b%Y")
z
z[1] - z[2]
as.numeric(z[1]-z[2])
as.numeric(z[1]-z[3])
weekdays(d2)
months(d2)
julian(d2)
years(d2)
library(lubridate)
install.packages("lubridate")
library(lubridate)
ymd("20200101")
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-03 10:15:03")
ymd_hms("2011-08-03 10:15:03", tz="Pacific/Auckland")
?Sys.timezone
x = dmy(c("1jun2013", "2jan2013", "31mar2013", "30jul2013"))
wday(x[1])
wday(x[1], label = TRUE)
library(swirl)
swirl()
Sys.getlocale("lc_TIME")
Sys.getlocale("lC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(packege = lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd('1989-05-17')
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989May17")
ymd("1989 May 17")
mdy("March 12 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
ymd_hms("03:22:14")
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 00)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 00)
this_moment
nyc <- now("America/New York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
nyc + days(2)
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15), + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong/Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17 2008", tz = Singapore"")
last_time <- mdy("June 17 2008", tz = "Singapore")
last_time <- mdy("june 17,2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
how_long
period(how_long)
as.period(how_long)
stopwatch()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/microdata.csv, method="curl"")
library(data.table)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "quiz4data.csv")
d <- read.csv("quiz4data.csv")
strsplit(names(d), split = "wgtg")[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "quiz4data.csv")
data <- read.csv("quiz4data.csv")
clean <- gsub(",","",data[,5])
mean(as.numeric(clean[1:215]),na.rm = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "quiz4data.csv")
data <- read.csv("quiz4data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "quiz3data2.csv")
data2 <- read.csv("quiz3data2.csv")
setnames(data, c("X", "X.1", "X.3", "x.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
setnames(data, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
all <- merge(data, data2, by = "CountryCode")
table(grepl("june", tolower(all$Special.Notes)),grepl("fiscal year end", tolower(all$Special.Notes)))[4]
library(quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign = FALSE)
sampleTime = index(amzn)
length(grep("^2012", sampleTimes))
length(grep("^2012",sampleTimes))
library(dplyr)
filename <- "corsera_DS3_Final.zip"
if(!file.exists(filename))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, filename, method = "curl")
if(!file.exists("HCI HAR Dataset")) {}
library(dplyr)
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n", "function"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
x <- rbind(x_train, x_test)
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(fileURL, filename, method="curl")
}
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
submit()
library(reshape2)
filename <- "dataset.zip"
filename <- "dataset.zip"
activitylables <- read.table("UCI HAR Dataset/activity_labels.txt")
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
filename <- "getdata_datset.zip"
if(!file.exists(filename)) {}
if(!file.exists(filename)) {}
if(!file.exists(filename)) {
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename, method="curl")
}
if (!fiel.exists("URL HAR Dataset")) {
unzip(filename)
}
if(!fiel.exists("URL HAR Dataset")) {
unzip(filename)
}
library(dplyr)
filename <- "Coursera_DS3_Final.zip"
# Checking if archieve already exists.
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, filename, method="curl")
}
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("code", "activity"))
ubject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$functions)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "code")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$functions)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "code")
x <- rbind(x_xtrain, x_test)
X <- rbind(x_train, x_test)
Y <- rbind(y_train, y_test)
subject <- rbind(subject_train, subject_test)
Subject <- rbind(subject_train, subject_test)
subject <- rbind(subject_train, subject_test)
Subjet <- rbind(subject_test, subject_train)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
subject <- rbind(subject_train, subject_test)
merged_Data <- cbind(subject, Y, X)
merged_Data
Tidydata <- merged_Data %>% select(subject, code, contains("mean"), contains("std"))
Tidydata$code <- activitie[Tidydata$code, 2]
Tidydata$code <- activities[Tidydata$code, 2]
names(Tidydata)[2] = "activity"
names(Tidydata)<-gsub("Acc", "Accelerometer", names(Tidydata))
names(Tidydata)<-gsub("Gyro", "Gyroscope", names(Tidydata))
names(Tidydata)<-gsub("BodyBody", "Body", names(TidyData))
names(TidyData)<-gsub("BodyBody", "Body", names(TidyData))
library(data.table)
library(dplyr)
featureNames <- read.table("UCL HAR Dataset/features.txt")
setwd
setwd()
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
unzip(zipfile="./data/Dataset.zip",exdir="./data")
path_rf <- file.path("./data" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
dataActivityTest  <- read.table(file.path(path_rf, "test" , "Y_test.txt" ),header = FALSE)
dataActivityTrain <- read.table(file.path(path_rf, "train", "Y_train.txt"),header = FALSE)
dataSubjectTrain <- read.table(file.path(path_rf, "train", "subject_train.txt"),header = FALSE)
dataSubjectTest  <- read.table(file.path(path_rf, "test" , "subject_test.txt"),header = FALSE)
dataFeaturesTest  <- read.table(file.path(path_rf, "test" , "X_test.txt" ),header = FALSE)
dataFeaturesTrain <- read.table(file.path(path_rf, "train", "X_train.txt"),header = FALSE)
str(dataActivityTest)
str(dataSubjectTrain)
str(dataSubjectTest)
str(dataFeaturesTest)
str(dataFeaturesTrain)
dataSubject <- rbind(dataSubjectTrain, dataSubjectTest)
dataActivity<- rbind(dataActivityTrain, dataActivityTest)
dataFeatures<- rbind(dataFeaturesTrain, dataFeaturesTest)
names(dataSubject)<-c("subject")
names(dataActivity)<- c("activity")
dataFeaturesNames <- read.table(file.path(path_rf, "features.txt"),head=FALSE)
names(dataFeatures)<- dataFeaturesNames$V2
dataCombine <- cbind(dataSubject, dataActivity)
Data <- cbind(dataFeatures, dataCombine)
subdataFeaturesNames<-dataFeaturesNames$V2[grep("mean\\(\\)|std\\(\\)", dataFeaturesNames$V2)]
selectedNames<-c(as.character(subdataFeaturesNames), "subject", "activity" )
Data<-subset(Data,select=selectedNames)
str(data)
str(Data)
activityLabels <- read.table(file.path(path_rf, "activity_labels.txt"),header = FALSE)
head(Data$activity,30)
activityLabels <- read.table(file.path(path_rf, "activity_labels.txt"),header = FALSE)
head(Data$activity, 30)
names(Data)<-gsub("^t", "time", names(Data))
names(Data)<-gsub("^f", "frequency", names(Data))
names(Data)<-gsub("Acc", "Accelerometer", names(Data))
names(Data)<-gsub("Gyro", "Gyroscope", names(Data))
names(Data)<-gsub("Mag", "Magnitude", names(Data))
names(Data)<-gsub("BodyBody", "Body", names(Data))
names(Data)
library(plyr)
Data2<-aggregate(. ~subject + activity, Data, mean)
Data2<-Data2[order(Data2$subject,Data2$activity),]
write.table(Data2, file = "tidydata.txt",row.name=FALSE)
library(knitr)
knit2html("codebook.Rmd");
knit2html("codebook.Rmd");
library(knitr)
knit2html("codebook.Rmd");
install.packages("knitr")
library(knitr)
knit2html("codebook.Rmd");
library(knitr)
knit2html("codebook.md");
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
unzip(zipfile="./data/Dataset.zip",exdir="./data")
path_rf <- file.path("./data" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
featureNames <- read.table("UCI HAR Dataset/features.txt")
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)
subjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
activityTrain <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
featuresTrain <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
subject <- rbind(subjectTrain, subjectTest)
activity <- rbind(activityTrain, activityTest)
features <- rbind(featuresTrain, featuresTest)
colnames(features) <- t(featureNames[2])
colnames(activity) <- "Activity"
colnames(subject) <- "Subject"
completeData <- cbind(features,activity,subject)
columnsWithMeanSTD <- grep(".*Mean.*|.*Std.*", names(completeData), ignore.case=TRUE)
columnsWithMeanSTD
mean(columnsWithMeanSTD)
requiredColumns <- c(columnsWithMeanSTD, 562, 563)
dim(completeData)
extractedData <- completeData[,requiredColumns]
dim(extractedData)
extractedData$Activity <- as.character(extractedData$Activity)
for (i in 1:6){
extractedData$Activity[extractedData$Activity == i] <- as.character(activityLabels[i,2])
}
extractedData$Activity <- as.factor(extractedData$Activity)
names(extractedData)
names(extractedData)<-gsub("Acc", "Accelerometer", names(extractedData))
names(extractedData)<-gsub("Gyro", "Gyroscope", names(extractedData))
names(extractedData)<-gsub("BodyBody", "Body", names(extractedData))
names(extractedData)<-gsub("Mag", "Magnitude", names(extractedData))
names(extractedData)<-gsub("^t", "Time", names(extractedData))
names(extractedData)<-gsub("^f", "Frequency", names(extractedData))
names(extractedData)<-gsub("tBody", "TimeBody", names(extractedData))
names(extractedData)<-gsub("-mean()", "Mean", names(extractedData), ignore.case = TRUE)
names(extractedData)<-gsub("-std()", "STD", names(extractedData), ignore.case = TRUE)
names(extractedData)<-gsub("-freq()", "Frequency", names(extractedData), ignore.case = TRUE)
names(extractedData)<-gsub("angle", "Angle", names(extractedData))
names(extractedData)<-gsub("gravity", "Gravity", names(extractedData))
names(extractedData)
extractedData$Subject <- as.factor(extractedData$Subject)
extractedData <- data.table(extractedData)
extractedData <- data.table(extractedData)
library(data.table)
extractedData <- data.table(extractedData)
tidyData <- aggregate(. ~Subject + Activity, extractedData, mean)
tidyData <- tidyData[order(tidyData$Subject,tidyData$Activity),]
write.table(tidyData, file = "Tidy.txt", row.names = FALSE)
library(knitr)
knit2html("codebook.Rmd");
knit2html("codebook.md");
View(tidyData)
